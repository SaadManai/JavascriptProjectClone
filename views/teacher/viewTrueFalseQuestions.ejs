<% include ../header.ejs %>
<head>
    <link href="../../css/bootstrap.min.css" rel="stylesheet">
    <link href="../../css/metisMenu.min.css" rel="stylesheet">
    <link href="../../css/sb-admin-2.css" rel="stylesheet">
    <link href="../../css/morris.css" rel="stylesheet">
    <link href="../../css/font-awesome.css" rel="stylesheet">
    <link type="text/css" rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.css" />
    <link type="text/css" rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid-theme.min.css" />
    <!-- scripts -->
    <script src="../../js/jquery.min.js"></script>
    <script src="../../js/bootstrap.min.js"></script>
    <script src="../../js/metisMenu.min.js"></script>
    <script src="../../js/raphael.min.js"></script>
    <script src="../../js/morris.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.js"></script>

</head>
<body>

<% include ../side_menu.ejs%>
<div id="jsGrid_users" style="margin-left: 250px;"></div>

<script>
    $("#jsGrid_users").jsGrid({
        height: "500px",
        width: "82%",
        filtering: false,
        editing: true,
        inserting: true,
        sorting: false,
        paging: false,
        autoload: true,
        pageSize: 10,
        pageButtonCount: 5,
        controller: {
            loadData: function (filter) {
                var data = $.Deferred();
                $.ajax({
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    url: "/teacher/getTrueFalseQuestions/"+<%= id %>,
                    dataType: "json"
                }).done(function (response) {
                    response = $.grep(response, function (item) {
                        return (!filter.tfqID || item.tfqID.indexOf(filter.tfqID) > -1)
                            && (!filter.tfText || item.tfText.indexOf(filter.tfText) > -1)
                            && (!filter.correctOption || item.correctOption.indexOf(filter.correctOption) > -1)
                            && (!filter.marks || item.marks.indexOf(filter.marks) > -1)
                    });
                    //response.push({"token" : "\"" + localStorage.getItem("token") + "\"" });
                    data.resolve(response);
                    console.log(response);
                });
                return data.promise();
            },
            insertItem: function (item) {

                return $.ajax({
                    type: "POST",
                    url: "/teacher/addTrueFalseQuestion/"+<%= id %>,
                    data: item,
                }).done(function () {
                    $("#jsGrid_users").jsGrid("loadData");
                });
            },
            updateItem: function (item) {

                return $.ajax({
                    type: "POST",
                    url: "/teacher/updateTrueFalseQuestion",
                    data: item
                }).done(function () {
                    $("#jsGrid_users").jsGrid("loadData");
                });
            },
            deleteItem: function (item) {
                item.token= localStorage.getItem("token");
                return $.ajax({
                    type: "POST",
                    url: "/teacher/deleteTrueFalseQuestion",
                    data: item
                }).done(function () {
                    $("#jsGrid_users").jsGrid("loadData");
                });
            },
        },
        fields: [
            {name: "tfqID", title: "ID", type: "text", width: 150, editing: false, visible: false},
            {name: "tfText", title: "Question", type: "text", width: 150, editing: true, validate:  { validator: "required", message: "Please enter the question."}},
            {name: "correctOption", title: "Correct Answer", type: "select", width: 150, items: [{Name: "True", Id: 0}, {Name: "False", Id: 1}], valueField: "Name", textField: "Name", editing: true, validate: "required"},
            {name: "marks", title: "Marks", type: "number", width: 150, editing: true, validate:  { validator: "range", message: "The marks should be between 1 and 100", param: [1, 100]}},
            {type: "control"}
        ]
    });
</script>


</body>

</html>